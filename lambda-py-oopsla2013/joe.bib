@string{icdl = {{ACM International Conference on Dynamic Languages}}}
@string{nord = {{Nordic Journal of Computing}}}
@string{ase = {{IEEE International Symposium on Automated Software Engineering}}}
@string{dls = {{ACM SIGPLAN Dynamic Languages Symposium}}}}
@string{www = {{International World Wide Web Conference}}}
@string{ndss = {{Network and Distributed System Security Symposium}}}
@string{ecoop = {{European Conference on Object-Oriented Programming}}}
@string{aplas = {ASIAN Symposium on Programming Languages and Systems}}
@string{esorics = {{European Symposium on Research in Computer Security}}}
@string{ccs = {{ACM Conference on Computer and Communications Security}}}
@string{sac = {{Symposium On Applied Computing}}}
@string{ssym = {{USENIX Security Symposium}}}
@string{icfp = {{International Conference on Functional Programming}}}
@string{popl = {{ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages}}}
@string{pldi = {{Programming Languages Design and Implementation}}}
@string{lncs = {{Springer Lecture Notes in Computer Science}}}
@string{springer = {Springer Berlin / Heidelberg}}
@string{oakland = "IEEE Symposium on Security and Privacy"}
@string{issse = "IEEE International Symposium on Secure Software Engineering"}
@string{owasp-appsec = {{OWASP AppSec Research}}}
@string{fool = {{ACM SIGPLAN International Workshop on Foundations of Object-Oriented Languages}}}
@string{esop = {{European Symposium on Programming}}}
@string{osdi = {{Symposium on Operating Systems Design and Implementation}}}
@string{webapps = {{Usenix Conference on Web Application Development}}}
@string{csf = {{IEEE Computer Security Foundations Symposium}}}
@string{toplas = "ACM Transactions on Programming Languages and
  Systems"}
@string{tpos = {{Theory and Practice of Object Systems}}}
@string{enitcs = {{Electronic Notes in Theoretical Computer Science}}}
@string{soups = {{Symposium on Usable Privacy and Security}}}
@string{issta = {{International Symposium on Software Testing and Analysis}}}
@string{scheme-workshop = {{Scheme and Functional Programming Workshop}}}
@string{icse = {{International Conference on Software Engineering}}}

@techreport{FOPAlgebra2007,
author = {Sven Apel and Christian Lengauer and Don Batory and Bernhard
                  Moller and Christian Kästner},
title = {An Algebra for Feature-Oriented Software Development},
year = {2007},
institution = {Fakultät für Informatik und Mathematik, Universität Passau},
pnumber = {MIP-0706}
}

@inproceedings{MapJAX-USENIX,
   author = {Daniel Myers and Jennifer Carlisle and James Cowling and
Barbara Liskov},
   title = {MapJAX: Data Structure Abstractions for Asynchronous Web
Applications},
   booktitle = {Proceedings of the 2007 USENIX Annual Technical Conference},
   address = {Santa Clara, CA},
   month = jun,
   year = {2007}
}

@inproceedings{CLWY08essence,
  title = {The essence of form abstraction},
  author = {Ezra Cooper and Sam Lindley and Philip Wadler and Jeremy Yallop},
  booktitle = {Sixth Asian Symposium on Programming Languages and Systems},
  year = {2008}
}

@article{BatoryOMalley1992,
 author = {Batory, Don and O'Malley, Sean},
 title = {The design and implementation of hierarchical software systems with reusable components},
 journal = {ACM Trans. Softw. Eng. Methodol.},
 volume = {1},
 number = {4},
 year = {1992},
 pages = {355--398},
 publisher = {ACM},
}

@article{LessonsFromGiant,
 author = {Brewer, Eric A.},
 title = {Lessons from Giant-Scale Services},
 journal = {IEEE Internet Computing},
 volume = {5},
 number = {4},
 year = {2001},
 issn = {1089-7801},
 pages = {46--55},
 doi = {http://dx.doi.org/10.1109/4236.939450},
 publisher = {IEEE Educational Activities Department},
 address = {Piscataway, NJ, USA},
}

@article{SearchForAPlanet,
    abstract = {Amenable to extensive parallelization, Google's web
                  search application lets different queries run on
                  different processors and, by partitioning the
                  overall index, also lets a single query use multiple
                  processors. to handle this workload, Googless
                  architecture features clusters of more than 15,000
                  commodity-class PCs with fault tolerant
                  software. This architecture achieves superior
                  performance at a fraction of the cost of a system
                  built from fewer, but more expensive, high-end
                  servers.},
    author = {Barroso, L. A. and Dean, J. and Holzle, U.},
    citeulike-article-id = {267186},
    citeulike-linkout-0 =
                  {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1196112},
    journal = {Micro, IEEE},
    keywords = {cluster, google, web},
    number = {2},
    pages = {22--28},
    posted-at = {2008-03-13 12:44:36},
    priority = {2},
    title = {Web search for a planet: The Google cluster architecture},
    url = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1196112},
    volume = {23},
    year = {2003}
}

@inproceedings{AjaxScope,
 author = {Kiciman, Emre and Livshits, Benjamin},
 title = {AjaxScope: a platform for remotely monitoring the
                  client-side behavior of web 2.0 applications},
 booktitle = {SOSP '07: Proceedings of twenty-first ACM SIGOPS
                  symposium on Operating systems principles},
 year = {2007},
 isbn = {978-1-59593-591-5},
 pages = {17--30},
 location = {Stevenson, Washington, USA},
 doi = {http://doi.acm.org/10.1145/1294261.1294264},
 publisher = {ACM},
 address = {New York, NY, USA},
}


@INPROCEEDINGS{Karger97consistenthashing,
    author = {David Karger and Eric Lehman and Tom Leighton and
                  Mathhew Levine and Daniel Lewin and Rina Panigrahy},
    title = {Consistent Hashing and Random Trees: Distributed Caching
                  Protocols for Relieving Hot Spots on the World Wide
                  Web},
    booktitle = {In ACM Symposium on Theory of Computing},
    year = {1997},
    pages = {654--663}
}


@INPROCEEDINGS{AIED2009,
author = {Joszef Patvarckzi and Joseph Politz and Neil Heffernan},
title = {Scalability and Robustness in the Domain of Web-Based Tutoring},
booktitle = {In Proceedings of the 14th
International Conference on Artificial Intelligence in Education,
Workshop Proceedings Volume 4, Scalability Issues in AIED.},
location = {Brighton, UK.},
year = {2009},
pages = {20--29}
}

@INPROCEEDINGS{CoralCDN,
    author = {Michael Freedman and Eric Freudenthal and David Mazières and David Mazi Eres},
    title = {Democratizing content publication with Coral},
    booktitle = {In NSDI},
    year = {2004},
    pages = {239--252}
}

@MISC{BitTorrentIncentives,
    author = {Bram Cohen},
    title = {Incentives Build Robustness in BitTorrent},
    year = {2003}
}

@INPROCEEDINGS{OnlyGiantComponents,
title = {Software Components, Only The Giants Survive},
booktitle = {Computer Systems: Theory, Technology, and Applications},
editor =  {K. Sparck-Jones and A. Herbert},
author = {Butler W. Lampson},
publisher =  {Springer},
year = {2004},
pages = {137--146}
}


@INPROCEEDINGS{XTRACE,
    author = {Rodrigo Fonseca and George Porter and Randy H. Katz and Scott Shenker and Ion Stoica},
    title = {XTrace: A Pervasive Network Tracing Framework},
    booktitle = {In NSDI},
    year = {2007}
}

@INPROCEEDINGS{MixinLayersBatoryYannis,
    author = {Yannis Smaragdakis and Don Batory},
    title = {Implementing Layered Designs with Mixin Layers},
    booktitle = {},
    year = {1998},
    pages = {550--570}
}

@inproceedings{Dryad,
 author = {Isard, Michael and Budiu, Mihai and Yu, Yuan and Birrell, Andrew and Fetterly, Dennis},
 title = {Dryad: distributed data-parallel programs from sequential building blocks},
 booktitle = {EuroSys '07: Proceedings of the 2nd ACM SIGOPS/EuroSys European Conference on Computer Systems 2007},
 year = {2007},
 isbn = {978-1-59593-636-3},
 pages = {59--72},
 location = {Lisbon, Portugal},
 doi = {http://doi.acm.org/10.1145/1272996.1273005},
 publisher = {ACM},
 address = {New York, NY, USA},
 }


@inproceedings{FindlerFlattMixins,
  author    = {Robert Bruce Findler and Matthew Flatt},
  title     = {Modular Object-Oriented Programming with Units and Mixins},
  booktitle = icfp,
  year      = {1998},
  pages     = {94-104},
}

@inproceedings{Portlets,
 author = {Trujillo, Salvador and Batory, Don and Diaz, Oscar},
 title = {Feature Oriented Model Driven Development: A Case Study for Portlets},
 booktitle = {ICSE '07: Proceedings of the 29th international conference on Software Engineering},
 year = {2007},
 isbn = {0-7695-2828-7},
 pages = {44--53},
 doi = {http://dx.doi.org/10.1109/ICSE.2007.36},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
 }

@INPROCEEDINGS{ContinueWebServer,
    author = {Shriram Krishnamurthi},
    title = {The CONTINUE server (or, how I administered PADL 2002 and 2003},
    booktitle = {of Lecture},
    year = {2003},
    pages = {2--16},
    publisher = {Springer-Verlag}
}

@inproceedings{Flapjax,
  author = {Leo Meyerovich and Arjun Guha and Jacob Baskin and Gregory H. Cooper and Michael Greenberg and Aleks Bromfield and Shriram Krishnamurthi},
  title = {Flapjax: A Programming Language for Ajax Applications},
  year = {2009},
  booktitle = {Object-Oriented Programming, Systems, Languages, and Applications (OOPSLA) 2009}
}

@INPROCEEDINGS{BigTable,
    author = {Fay Chang and Jeffrey Dean and Sanjay Ghemawat and Wilson C. Hsieh and Deborah A. Wallach and Mike Burrows and Tushar Ch and Andrew Fikes and Robert E. Gruber},
    title = {Bigtable: A distributed storage system for structured data},
    booktitle = {In Proceedings of the 7th Conference on USENIX Symposium on Operating Systems Design and Implementation - Volume 7},
    year = {2006},
    pages = {205--218}
}

@article{PNUTS,
 author = {Cooper, Brian F. and Ramakrishnan, Raghu and Srivastava, Utkarsh and Silberstein, Adam and Bohannon, Philip and Jacobsen, Hans-Arno and Puz, Nick and Weaver, Daniel and Yerneni, Ramana},
 title = {PNUTS: Yahoo!'s hosted data serving platform},
 journal = {Proc. VLDB Endow.},
 volume = {1},
 number = {2},
 year = {2008},
 pages = {1277--1288},
 doi = {http://doi.acm.org/10.1145/1454159.1454167},
 publisher = {VLDB Endowment},
}

@article{Self-inflictedObjects,
 author = {Di Gianantonio, Pietro and Honsell, Furio and Liquori, Luigi},
 title = {A lambda calculus of objects with self-inflicted extension},
 journal = {SIGPLAN Notices},
 volume = {33},
 number = {10},
 year = {1998},
 pages = {166--178},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@INPROCEEDINGS{And05prototypeswith,
    author = {Lee Salzman and Jonathan Aldrich},
    title = {Prototypes with Multiple Dispatch: An Expressive and Dynamic Object Model},
    booktitle = {ECOOP 2005, Proceedings, LNCS},
    year = {2005},
}

@INPROCEEDINGS{Fisher94alambda,
    author = {Kathleen Fisher and Furio Honsell and John C. Mitchell},
    title = {A Lambda Calculus of Objects and Method Specialization},
    booktitle = {Nordic Journal of Computing},
    year = {1994},
    pages = {26--38}
}

@article{Anderson200537,
title = "Type Checking for {JavaScript}",
journal = "Electronic Notes in Theoretical Computer Science",
volume = "138",
number = "2",
pages = "37 - 58",
year = "2005",
note = "Proceedings of the Second Workshop on Object Oriented Developments",
author = "Christopher Anderson and Paola Giannini",
}

@INPROCEEDINGS{sm;jm;at:JavaScriptSemantics,
  author = {Sergio Maffeis and John Mitchell and Ankur Taly},
  booktitle = aplas,
  pages = {307--325},
  title = {{An Operational Semantics for JavaScript}},
  year = {2008},
  abstract = {We define a small-step operational semantics for the ECMAScript standard language corresponding to JavaScript, as a basis for analyzing security properties of web applications and mashups. The semantics is based on the language standard and a number of experiments with different implementations and browsers. Some basic properties of the semantics are proved, including a soundness theorem and a characterization of the reachable portion of the heap.}
}

@inproceedings{typed_scheme,
 author = {Tobin-Hochstadt, Sam and Felleisen, Matthias},
 title = {{The Design and Implementation of Typed Scheme}},
 booktitle = popl,
 year = {2008},
 pages = {395--406},
 }

@inproceedings{js_essence,
 author = {Guha, Arjun and Saftoiu, Claudiu and Krishnamurthi, Shriram},
 title = {{The Essence of JavaScript}},
 year = {2010},
 booktitle = ecoop
}


Without the leading at-sign, we are "outside" and entry and can have free form
text.  This is how bibtex does comments.

MISC{adsafe,
AUTHOR = {Crockford, Douglas},
TITLE = {{ADsafe}},
NOTE = "\texttt{http://\-www.ad\-safe.org}"
}

misc{fbjs,
author={Facebook},
title={{FBJS}},
note={{\tt http://wiki.devel\-opers.face\-book.com/index.php/FBJS}}
}

@techreport{caja,
author = {Miller, M. S. and Samuel, M. and Laurie, B. and Awad, I and Stay, M.},
title =  {{Caja: Safe active content in sanitized JavaScript}},
institution = {Google Inc.},
year = {2008},
note = {{\tt\small http://google\-caja.googlecode.com/files/caja-spec\--2008\--06\--07.pdf}}
}

@inproceedings{cr;jd;hjw;od;se:BrowserShield,
  author = {Charles Reis and John Dunagan and Helen J. Wang and Opher
                  Dubrovsky and Saher Esmeir},
  title = {{BrowserShield: Vulnerability-Driven Filtering of Dynamic HTML}},
  booktitle = osdi,
  year = {2006}
}

@MISC{websandbox,
author = {Microsoft},
title = {Microsoft Web Sandbox},
institution = {Microsoft},
year = {2010},
note = {{\tt http://web\-sandbox.live\-labs.com/De\-fault.aspx}}
}

% Design of an analysis to detect breakage of the initial ADsafe environment
@inproceedings{mf;jw;ab:CapabilityLeaks,
author = {Finifter, Matthew and Weinberger, Joel and Barth, Adam},
title = {{Preventing Capability Leaks in Secure JavaScript Subsets}},
year = {2010},
booktitle = ndss
}


% Plug-ins are more dangerous than mashups
@inproceedings{ab;apf;ps;ab:ExtensionVulnerabilities,
title= {{Protecting Browsers from Extension Vulnerabilities}},
author = {Adam Barth and Adrienne Porter Felt and Prateek Saxena and Aaron Boodman},
booktitle = {{Network and Distributed System Security Symposium}},
year = {2010}
}

@inproceedings{sm;jcm;at;FiltersRewritingWrappers,
title = {{Isolating JavaScript with Filters, Rewriting, and Wrappers}},
author = {Sergio Maffeis and John C. Mitchell and Ankur Taly},
booktitle = esorics,
year = {2009}
}


% They attempt to model Caja with the too-big semantics, and prove some
% property of authority.  No idea how to implement tools using this, or
% how it corresponds to real-world Caja --- they don't do source analysis.
@inproceedings{sm;jcm;at:WebCapabilities,
title = {{Object Capabilities and Isolation of Untrusted Web Applications}},
author = {Sergio Maffeis and John C. Mitchell and Ankur Taly},
booktitle = oakland,
publisher = {{IEEE}},
year = {2010}
}

% They basically just state the syntactic restrictions/rewritings of FBJS
% in terms of their big semantics.  Then they say the the language is safe
% as a result.  Even if their semantics is correct, they have said nothing
% about the actual code artifact of FBJS.
@inproceedings{sm;jcm;at:EnforceJavaScriptSubsets,
author= {Sergio Maffeis and John C. Mitchell and Ankur Taly},
title = {Run-Time Enforcement of Secure JavaScript Subsets},
booktitle = {{W2SP}'09},
publisher = {{IEEE}},
year = {2009}
}

% ConScript --- 
@inproceedings{meyerovich:ConScript,
author = {Leo Meyerovich and Ben Livshits},
title = {Conscript: Specifying and enforcing fine-grained security policies for JavaScript in the browser},
booktitle = oakland,
year = {2010}
}
                  
% Core subset of JavaScript called CoreScript --- doesn't have higher order 
% functions (or at least not normal looking ones).  Tries to handle "higher-
% order script", but notes difficulties in arbitrary JS evaluation and
% DOM manipulation.  Specifies security policies by instrumenting incoming
% JS to use calls that check the security policy.  Prototype implemented
% as a browser modification, unclear about the relationship between CoreScript
% and real JS.
@inproceedings{dy;ac;ni;is:JavaScriptInstrumentation,
author = {Dachuan Yu and Ajay Chander and Nayeem Islam and Igor Serikov},
title = {{JavaScript Instrumentation for Browser Security}},
booktitle = popl,
year = {2007}
}

@inproceedings{dewald:ADSandbox,
author = {Andreas Dewald and Thorsten Holz and Felix C. Freiling},
title = {{ADSandbox: Sanboxing JavaScript to fight Malicious Websites}},
booktitle = sac,
year = {2010}
}

% Joe-E is a capability safe subset of Java.  Capabilities are
% presented as object references---the notion of capability safety is
% enforced by not allowing references to come from global state.
% Instead, objects must delegate authority to one another by handing
% off capabilities to other objects.  The authors note that one main
% weakness of the approach is that they have to do a lot of
% potentially error-prone work in "taming" the Java runtime.  Even if
% they get this right in theory, they also don't have a verification
% of the runtime.  This is analogous to our issues with the integrity
% of browser implementations and how they can break ADsafe, Caja, and
% FBJS.
@inproceedings{am;dw;tc:JoeE,
author = {Adrian Mettler and David Wagner and Tyler Close},
title = {{Joe-E: A security-oriented subset of Java}},
booktitle = {{17th Network \& Distributed System Security Symposium}},
year={2010}
}

@book{redex,
author = {Matthias Felleisen and Robert Bruce Findler and Matthew Flatt},
title = {Semantics Engineering with PLT Redex},
year = {2009},
publisher = {{MIT Press}}
}

@incollection{dr:ML-ART,
author = {R\'emy, Didier},
title = {{Programming objects with ML-ART, an extension to ML with abstract and record types}},
booktitle = {Theoretical Aspects of Computer Software},
series = lncs,
editor = {Hagiya, Masami and Mitchell, John},
publisher = springer,
pages = {321--346},
volume = {789},
year = {1994}
}

% This is the first mention of the term "Reference monitor" I can find.
@TECHREPORT{ja:ReferenceMonitor,
   author = {James P. Anderson},
   title = {{Computer Security Technology Planning Study}},
   institution = {{Deputy for Command and Management Systems, HQ Electronic Systems Division (AFSC)}},
   address = {{L. G. Handscom Field, Bedford, Massachusetts 01730}},
   month = {October},
   year = {1972},
number = {ESD-TR-73-51}
}
                  
@ARTICLE{vg;ml;bp;2000:RecursiveSubtypingRevealed,
  author = {Vladimir Gapeyev and Michael Levin and Benjamin Pierce},
  title = {Recursive Subtyping Revealed},
  journal = {Journal of Functional Programming},
  volume = 12,
  number = 6,
  pages = {511--548},
  checked = {Yes},
  year = {2003},
  plclub = {Yes},
  bcp = {Yes},
  keys = {subtyping},
  conf = {http://www.cis.upenn.edu/~bcpierce/papers/rsr.ps},
  note = {Preliminary version in {\em International Conference on
                  Functional Programming (ICFP)}, 2000.  Also appears as
                  Chapter 21 of {\em Types and Programming Languages}
                  by Benjamin C. Pierce (MIT Press, 2002).}
}

@INPROCEEDINGS{ph;pt:RecencyTypes,
  author = {Philip Heidegger and Peter Thiemann},
  title = "Recency types for dynamically-typed, object based languages: Strong updates for {JavaScript}",
  booktitle = fool,
  year = {2009}
}

@INPROCEEDINGS{louw:AdJail,
  author = {Mike Ter Louw and Karthik Thotta Ganesh and V.N. Venkatakrishnan},
  title = {{AdJail: Practical enforcement of confidentiality and integrity policies on Web advertisements}},
  booktitle = ssym,
  year = {2010}
}

@INPROCEEDINGS{jc;ad;jr;js;ib;cb;ak;ta:SandboxContainment,
  author = {Justin Cappos and Armon Dadgar and Jeff Rasley and Justin
                  Samuel and Ivan Beschastnikh and Cosmin Barsan and
                  Arvind Krishnamurthy and Thomas Anderson},
  title = {{Retaining Sandbox Containment Despite Bugs in Privileged
                  Memory-Safe Code}},
  booktitle = ccs,
  year = {2010}}

@INPROCEEDINGS{jm;php;ds:SafeWrappersSanePolicies,
  author = {Jonas Magazinius and Phu H. Phung and David Sands},
  title = {{Safe Wrappers and Sane Policies for Self Protecting JavaScript}},
  booktitle = owasp-appsec,
  year = {2010},
}

@INPROCEEDINGS{cj;hw:Subspace,
  author = {Collin Jackson and Helen J. Wang},
  title = {{Subspace: Secure Cross-Domain Communication for Web Mashups}},
  booktitle = www,
  year = {2007}
}


% They have statistics (from 2008-2009) on how many websites include
% scripts from other domains.  Turns out it's quite a lot.
@INPROCEEDINGS{cy;hw:InsecureJSPractices,
  author = {Chuan Yue and Haining Wang},
  title = {{Characterizing Insecure JavaScript Practices on the Web}},
  booktitle = www,
  year = {2009}
}
p
% Section 4 talks about static type systems being good for *control
% safety*, or not calling the wrong thing.
% Also has this quote (page 98):
% However, static type systems are ill-suited for the enforcement of 
% policies that depend upon things that can be detected at runtime
% but cannot be ascertained during program development. Also, it may be simpler
% to insert a dynamic check than to have a programmer develop an explicit proof
% that the check is not needed.
% Also:
% The building blocks of language-based security are program rewriting
% and program analysis. By rewriting a program, we can ensure that the
% result is incapable of exhibiting behavior disallowed by some 
% security policy at hand. And by analyzing a program, we ensure only
% those programs that cannot violate the policy are ever given an
% opportunity to be executed
@incollection{bfs;gm;rh:LanguageBasedSecurity,
  author = {Fred B. Schneider and Greg Morrisett and Robert Harper},
  title = {{A Language-Based Approach to Security}},
  booktitle = {Informatics},
  publisher = springer,
  series = lncs,
  editor = {Wilhelm, Reinhard},
  volume = {2000},  
  year = {2001}, 
  pages = {86--101},
}

@INPROCEEDINGS{sg;bj:GATEKEEPER,
  author = {Salvatore Guarnieri and Benjamin Livshits},
  title = {{GATEKEEPER: Mostly static enforcement of security and reliability policies for JavaScript code}},
  booktitle = ssym,
  year = {{2009}}
}

% "Coloring" code to enforce abstract data types on a client
@INPROCEEDINGS{sz;dg;gm:PincipalsInProgrammingLanguages,
  author = {Steve Zdancewic and Dan Grossman and Greg Morrisett},
  title = {{Principals in Programming Languages: A Syntactic Proof Technique}},
  booktitle = icfp,
  year = {{1999}}
}

@inproceedings{ab;bcp:FeatherweightFirefox,
  author = {Aaron Bohannon and Benjamin C. Pierce},
  title = {{Featherweight Firefox: Formalizing the Core of a Web Browser}},
  booktitle = webapps,
  year = {2010}
}

@inproceedings{da;ab;pel;jm;ds:FormalWebFoundation,
  author = {Devdatta Akhawe and Adam Barth and Peifung E. Lam and John Mitchell and Dawn Song},
  title = {{Towards a Formal Foundation of Web Security}},
  booktitle = csf,
  year = 2010
}
                  

@incollection{wand:objectinference,
  author = "Mitchell Wand",
  title = "Type inference for objects with instance variables and inheritance",
  booktitle = "Theoretical aspects of object-oriented programming",
  year = 1994,
  publisher = {{MIT Press}}
}

@incollection{remy:mlart,
  author = {R\'emy, Didier},
  title = {{Programming objects with ML-ART, an extension to ML with abstract and record types}},
  booktitle = {Theoretical Aspects of Computer Software},
  series = lncs,
  editor = {Hagiya, Masami and Mitchell, John},
  publisher = springer,
  pages = {321--346},
  volume = {789},
  year = {1994}
}

@article{hosoya:xduce,
  author = "Haruo Hosoya and Jérôme Vouillon and Benjamin C. Pierce",
  title = "Regular Expression Types for XML",
  journal = toplas,
  year = 2005,
  volume = 27,
  pages = {46-90}
}

@inproceedings{saxena:kudzu,
  author = {Prateek Saxena and Devdatta Akhawe and Steve Hanna and Feng Mao and Stephen McCamant and Dawn Song},
  title = {A Symbolic Execution Framework for JavaScript},
  booktitle = oakland,
  year = 2010
}


@inproceedings{furr:ril,
  author = "Michael Furr and An, {Jong-hoon} David An and Jeffrey S. Foster and Michael Hicks",
  title = {{The Ruby Intermediate Language}},
  booktitle = dls,
  year = 2009
}

@inproceedings{an:typedror,
  author = "{Jong-hoon} David An and Avik Chaudhuri and Jeffrey S. Foster",
  title = "Static Typing for {Ruby on Rails}",
  booktitle = ase,
  year = 2009
}

@article{flatt:classicjava,
  author = "Matthew Flatt and Shriram Krishnamurthi and Matthias Felleisen",
  title = {{A Programmer's Reduction Semantics for Classes and Mixins}},
  journal = lncs,
  volume = 1523,
  year = 1999
}

@inproceedings{bracha:pluggable,
  author = "Gilad Bracha",
  title = {{Pluggable type systems}},
  year = 2004,
  booktitle = {{OOPSLA Workshop on Revival of Dynamic Languages}}
}

@mastersthesis{allwood:fleece,
  author = "Tristan Allwood",
  title = "Fleece, pluggable type checking for dynamic programming languages",
  school = {{Imperial College of Science, Technology and Medicine, University of London}},
  year = 2006
}

@inproceedings{haldiman:typeplug,
  author = {{Niklaus Haldiman and Marcus Denker and Oscar Nierstrasz}},
  title = {{Practical, Pluggable Types}},
  booktitle = icdl,     
  year = 2007
}

@article{markstrum:javacop,
  author = {Shane Markstrum and Daniel Marino and Matthew Esquivel and Todd Millstein and Chris Andreae and James Noble},
  title = {{JavaCOP: Declarative Pluggable Types for Java}},
  journal = toplas,
  volume = 32,
  year = 2010
}
  
@inproceedings{halfond:sqlinjection,
  author = "William G.J. Halfond and Jeremy Viegas and Alessandro Orso",
  title = {{A Classification of SQL Injection Attacks and Countermeasures}},
  booktitle = issse,
  year = 2006
}

@inproceedings{mitchell:specialization,
  author = "John C. Mitchell",
  title = "Toward a typed foundation for method specialization and inheritance",
  booktitle = popl,
  year = 1990
}

@article{fisher:specialization,
  author = "Kathleen Fisher and Furio Honsell and John C. Mitchell",
  title = "A lambda calculus of objects and method specialization",
  journal = nord,
  volume = 1,
  pages = {3--37},
  year = 1994
}

@inproceedings{bracha:strongtalk,
  author = "Gilad Bracha and David Griswold",
  title = "{Strongtalk}: Typechecking {Smalltalk} in a Production Environment",
  booktitle = oopsla,
  year = 1993
}
  
@book{goldberg:smalltalk80,
  author = "Adele Goldberg and David Robson",
  title = {{Smalltalk-80, the Language and its Implementation}},
  year = 1983,
  publisher = "Addison-Wesley"
}

@article{fisher:classes,
  author = "Kathleen Fisher and John C. Mitchell",
  title = {{On the Relationship Between Classes, Objects, and Data Abstraction}},
  year = 1998,
  journal = tpos,
  volume = 4,
  pages = {3--25}
}

@inproceedings{ancona:rpython,
  author = "Davide Ancona and Massimo Ancona and Antonio Cuni and Nicholas D. Matsakis",
  title = "{RPython}: a Step Towards Reconciling Dynamically and Statically Typed {OO} Languages",
  year = 2007,
  booktitle = dls
}
 
@inproceedings{drossopoulou:fickle,
  author = "Sophia Drossopoulou and Ferruccio Damiani and Mariangiola Dezani-Ciancaglini and Paola Giannini",
  title = {{$\mathcal{F}\mathit{ickle}$: Dynamic Object Re-classification}},
  year = 2001,
  booktitle = ecoop
}

@article{ancona:fickle,
  author = "Davide Ancona and Christopher Anderson and Ferruccio Damiani and Sophia Drossopoulou and Paola Giannini and Elena Zucca",
  title = {{A provenly correct translation of Fickle into Java}},
  year = 2007,
  journal = toplas,
  volume = 2
}

@article{tabuchi:regextypes,
  author = "Naoshi Tabuchi and Eijiro Sumii and Akinori Yonezawa",
  title = "Regular Expression Types for Strings in a Text Processing Language",
  journal = enitcs,
  volume = 75,
  year = 2003
}

@book{flanagan:ruby,
  author = "David Flanagan and Yukihiro Matsumoto",
  title = {{The Ruby Programming Language}},
  publisher = {{O'Reilly Media}},
  year = 2008
}

@article{hosoya:regexml,
  author = "Haruo Hosoya and J\'er\^ome Vouillon and Benjamin C. Pierce",
  title = "Regular Expression Types for {XML}",
  journal = toplas,
  volume = 27,
  year = 2005
}

@inproceedings{yee:passpet,
  author = "Ka-Ping Yee and Kragen Sitaker",
  title = "Passpet: Convenient Password Management and Phishing Protection",
  year = 2006,
  booktitle = soups
}

MISC{close:waterken,
AUTHOR = {Close, Tyler},
TITLE = {{Waterken Server}},
NOTE = "\texttt{http://water\-ken.source\-forge.net/}"
}

@article{krishnamurthi:pltwebserver,
  author = "Shriram Krishnamurthi and Peter Walton Hopkins and Jay McCarthy and Paul T. Graunke and Greg Pettyjohn and and Matthias Felleisen",
  title = "Implementation and Use of the PLT Scheme Web Server",
  year = 2007,
  journal = "{Higher-Order} and Symbolic Computation"
}

@article{ducasse:seaside,
author = {Stephane Ducasse and Adrian Lienhard and Lukas Renggli},
title = {Seaside: A Flexible Environment for Building Dynamic Web Applications},
journal ={IEEE Software},
volume = {24},
year = {2007},
pages = {56-63}
}

@article{milner:types,
  author={Robin Milner},
  title={A Theory of Type Polymorphism in Programming},
  journal={Journal of Computer and System Sciences},
  volume={17},
  pages={348-375},
  year={1978}
}

@article{wright:typesoundness,
  author={Andrew K. Wright and Matthias Felleisen},
  title={A Syntactic Approach to Type Soundness},
  journal={Information and Computation},
  year={1994},
  volume={150(1)},
  pages={38-94}
}

@inproceedings{wrigstad:liketypes,
  title={{Integration of Typed and Untyped Code in a Scripting
Language}},
  author={Tobias Wrigstad and Francesco {Zappa Nardelli} and Sylvain
Lebresne and Johan \"Ostlund and Jan Vitek},
  booktitle=popl,
  year=2010
}

@inproceedings{hochstadt:langlibs,
  title={{Languages as Libraries}},
  author={Sam Tobin-Hochstadt and Vincent St-Amour and Ryan Culpepper and Matthew Flatt and Matthias Felleisen},
  year=2011,
  booktitle={Programming Languages Design and Implementation}
}

@article{reynolds:types,
  title={{Types, Abstraction and Parametric Polymorphism}},
  author={John C. Reynolds},
  journal={{Information Processing}},
  year=1983,
  volume=83,
  pages={513-523}
}

@inproceedings{suzuki:smalltalk,
  author={Norihisa Suzuki},
  title={{Inferring Types in Smalltalk}},
  booktitle=popl,
  year=1981
}

@inproceedings{borning:smalltalk,
  title={{A type declaration and inference system for smalltalk}},
  author={Alan H. Borning and Daniel H. H. Ingalls},
  booktitle=popl,
  year=1982
}

@techreport{guha:fluidobjects,
  title={{Fluid Object Types}},
  author={Arjun Guha and Joe Gibbs Politz and Shriram Krishnamurthi},
  year=2011,
  institution={{Brown University}},
  number={CS-11-04}
}

@inproceedings{st-amour:numeric,
  title={{Typing the Numeric Tower}},
  author={Vincent St-Amour and Sam Tobin-Hochstadt},
  year=2011,
  booktitle={{Practical Aspects of Declarative Languages}}
}

@inproceedings{egner:tower,
  title={{Cleaning up the Tower: Numbers in Scheme}},
  author={Sebastian Egner and Richard A. Kelsey and Michael Sperber},
  year={2004},
  booktitle=scheme-workshop
}

@misc{racket,
author={PLT},
title={{The Racket Programming Lanugage}},
note={{\tt http://racket-lang.org}},
year=2012
}

@article{steenkiste:tagcheck,
  author={Peter Steenkiste},
  title={{The Implementation of Tags and Run-Time Type Checking}},
  journal={{Topics in Advanced Language Implementation}},
  editor={Peter Lee},
  publisher={{MIT Press}},
  pages={3--24},
  year=1991
}

@inproceedings{klein:runresearch,
  author={Casey Klein and John Clements and Christos Dimoulas and Carl Eastlund and Matthias Felleisen and Matthew Flatt and Jay A. McCarthy and Jon Rafkind and Sam Tobin-Hochstadt and Robert Bruce Findler},
  title={Run Your Research: On the Effectiveness of Lightweight Mechanization},
  booktitle=popl,
  year=2012
}

@inproceedings{henglein:schemetoml,
  author={Fritz Henglein and Jakob Rehof},
  title={{Safe polymorphic type inference for a dynamically typed language: translating Scheme to ML}},
  year=1995,
  booktitle={{Functional Programming Languages and Computer Architecture}}
}

@inproceedings{scott:unitype,
  author={Dana Scott},
  title={{Lambda calculus: Some models, some philosophy}},
  booktitle={{The Kleene Symposium}},
  pages={223--265},
  year=1980
}

@inproceedings{matthews:unitype,
  author={Jacob Matthews and Robert Bruce Findler},
  title={{Operational Semantics for Multi-Language Programs}},
  booktitle=popl,
  year=2007
}

@inproceedings{papi:pluggablejava,
  author={Matthew M. Papi and Mahmood Ali and Telmo Luis {Correa~Jr.} and Jeff H. Perkins and Michael D. Ernst},
  title={{Practical Pluggable Types for Java}},
  booktitle=issta,
  year=2008
}

@inproceedings{vytiniotis:deferredpearl,
  author={Dimitrios Vytiniotis and Simon Peyton Jones and {Jos\'e} Pedro {Magalh\~aes}},
  title={{Equality proofs and deferred type errors, A compiler pearl}},
  year=2012,
  booktitle=icfp
}

@inproceedings{bayne:ductilej,
   author = {Michael Bayne and Richard Cook and Michael D. Ernst},
   title = {Always-available static and dynamic feedback},
   booktitle = icse,
   pages = {521--530},
   year = {2011}
}

@inproceedings{hedin:jsflow,
  author = {Daniel Hedin and Andrei Sabelfeld},
  title = {{Information-Flow Security Control for JavaScript}},
  booktitle = csf,
  year = 2012
}

@inproceedings{chugh:dref,
  author = {Ravi Chugh and David Herman and Ranjit Jhala},
  title = {{Dependent Types for JavaScript}},
  booktitle = oopsla,
  year = 2012
}

@inproceedings{chugh:stagedflow,
  author = {Ravi Chugh and Jeffery A. Meister and Ranjit Jhala and Sorin Lerner},
  title = {{Staged Information Flow for JavaScript}},
  booktitle = pldi,
  year = 2009
}

@inproceedings{taly:ses,
  author = {Ankur Taly and Erlingsson, {\'U}lfar and John C. Mitchell and Mark S. Miller and Jasvir Nagra},
  title = {{Automated Analysis of Security-Critical JavaScript APIs}},
  booktitle = oakland,
  year = 2012
}

@inproceedings{queinnec:macrotower,
  author = {Christian Queinnec},
  title = {{Macroexpansion Reflective Tower}},
  booktitle = {Reflection},
  year = 1996
}

@inproceedings{wand:reflectivetower,
  author = {Mitchell Wand and Daniel P. Friedman},
  title = {{The Mystery of the Tower Revealed: A Non-Reflective Description of the Reflective Tower}},
  booktitle= {{LISP and Functional Programming}},
  year = 1986
}

@misc{erights:kernele,
  author = {Mark S. Miller},
  title = {{The Kernel-E Language Reference Manual}},
  url = {http://www.erights.org/elang/elangmanual.pdf}
}

@misc{plt:racketref,
  author = {PLT},
  title = {{The Racket Guide}},
  url = {http://docs.racket-lang.org/guide/eval.html}
}

@misc{ecma:es5,
  author = {{ECMA International}},
  title = {{ECMAScript Edition 5.1}},
  url = {http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-262.pdf}
}

@inproceedings{hochstadt:migration,
  author = {Sam Tobin-Hochstadt and Matthias Felleisen},
  title = {{Interlanguage Migration: From Scripts to Programs}},
  year = 2006,
  booktitle = dls
}

@inproceedings{strickland:arity,
  author = {T. Stephen Strickland and Sam Tobin-Hochstadt and Matthias Felleisen},
  title = {{Practical Variable-Arity Polymorphism}},
  year = 2009,
  booktitle = esop
}

@inproceedings{flanagan:mrspidey,
  author = {Cormac Flanagan and Matthew Flatt and Shriram Krishnamurthi and Stephanie Weirich and Matthias Felleisen},
  title = {{Catching Bugs in the Web of Program Invariants}},
  year = 1996,
  booktitle = pldi
}

@inproceedings{politz:progressive-types,
  author = {Joe Gibbs Politz and Hannah Quay-de la Vallee and Shriram
Krishnamurthi},
  title = {{Progressive Types}},
  year = 2012,
  booktitle = {{SPLASH/Onward!}}
}

@inproceedings{politz:s5,
  author = {Joe Gibbs Politz and Matthew J. Carroll and Benjamin S. Lerner and Justin Pombrio and Shriram Krishnamurthi},
  title = {{A Tested Semantics for Getters, Setters, and Eval in JavaScript}},
  year = 2012,
  booktitle = {{Dynamic Languages Symposium}}
}

